---
- block:
    - name: install packages
      ansible.builtin.apt:
        name: "{{ packages }}"
      vars:
        packages:
          - postgresql
          - libpq-dev
          - python-psycopg2
          - python3-pip
          - libxml2-dev
          - libxslt1-dev
          - libffi-dev
          - graphviz
          - libpq-dev
          - libssl-dev
          - redis-server
          - zlib1g-dev
          - supervisor
    - name: make sure postgresql is activated
      ansible.builtin.systemd:
        name: postgresql
        state: started
        enabled: yes
    - name: create database in postgresql
      become: yes
      become_user: postgres
      community.postgresql.postgresql_db:
        name: "{{ netbox_db_name }}"
        encoding: UTF-8
        template: template0
    - name: create database user which can connect to netbox db
      become: yes
      become_user: postgres
      community.postgresql.postgresql_user:
        db: "{{ netbox_db_name }}"
        name: "{{ netbox_db_user }}"
        password: "{{ netbox_db_password }}"
        priv: ALL
        expires: infinity
    - name: download netbox release package
      ansible.builtin.unarchive:
        src: "https://github.com/netbox-community/netbox/archive/v{{ netbox_version }}.tar.gz"
        dest: "/opt"
        remote_src: yes
    - name: soft link netbox dir to /opt/netbox
      ansible.builtin.file:
        src: "/opt/netbox-{{ netbox_version }}"
        dest: "/opt/netbox"
        state: "link"
    - name: install python packages
      ansible.builtin.command: "{{ item }}"
      loop:
        - "pip3 install -r requirements.txt"
        - "pip3 install gunicorn"
      args:
        chdir: "/opt/netbox"
    - name: create configuration file
      ansible.builtin.command: "cp /opt/netbox/netbox/netbox/configuration.example.py /opt/netbox/netbox/netbox/configuration.py"
      args:
        creates: "/opt/netbox/netbox/netbox/configuration.py"
    - name: setup configuration file
      ansible.builtin.template:
        src: "configuration.py.j2"
        dest: "/opt/netbox/netbox/netbox/configuration.py"
        owner: "www-data"
        group: "www-data"
        mode: "0600"
    - name: run db migrations
      ansible.builtin.command: "{{ item }}"
      loop:
        - "python3 manage.py migrate"
        - "python3 manage.py collectstatic --no-input"
        - "python3 manage.py loaddata initial_data"
      args:
        chdir: "/opt/netbox/netbox"
    - name: copy nginx config to destination
      ansible.builtin.template:
        src: "netbox_nginx.j2"
        dest: "/etc/nginx/sites-available/netbox"
    - name: create soft link against nginx config
      ansible.builtin.file:
        src: "/etc/nginx/sites-available/netbox"
        dest: "/etc/nginx/sites-enabled/netbox"
        state: link
    - name: delete default nginx config
      ansible.builtin.file:
        path: "/etc/nginx/sites-enabled/default"
        state: absent
    - name: copy gunicorn config to destination
      ansible.builtin.copy:
        src: "gunicorn_config.py"
        dest: "/opt/netbox/gunicorn_config.py"
    - name: copy supervisor config to destination
      ansible.builtin.copy:
        src: "netbox.conf"
        dest: "/etc/supervisor/conf.d/netbox.conf"
    - name: ensure related services are enabled and restarted
      ansible.builtin.systemd:
        name: "{{ item }}"
        state: restarted
        enabled: yes
      loop:
        - redis
        - supervisor
        - nginx
    - name: friendly notice
      ansible.builtin.debug: "msg={{ item }}"
      loop:
        - "Don't forget to change directory to /opt/netbox/netbox and create user by executing python3 manage.py createsuperuser"
  tags:
    - netbox
